name: Publish Contetto-desktop
on:
  push:
    branches: [main]
jobs:
  windows:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]
        node-version: [20.x]
    env:
      GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}

    steps:
      - name: Checkout Contetto-desktop
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
          path: "."

      - name: Make Contetto-desktop
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - run: npm install
      - run: npm run publish -- --dry-run

      - name: Sign Artifact with CodeSignTool
        uses: sslcom/esigner-codesign@develop
        with:
          command: sign
          username: ${{ secrets.ES_USERNAME }}
          password: ${{ secrets.ES_PASSWORD }}
          credential_id: ${{ secrets.ES_CREDENTIAL_ID }}
          totp_secret: ${{ secrets.ES_TOTP_SECRET }}
          file_path: ${GITHUB_WORKSPACE}/out/make/squirrel.windows/x64/contettoSetup.exe
          malware_block: false
          override: true
          clean_logs: true

      - name: Publish electron app
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - run: npm run publish -- --from-dry-run

  macos:
    needs:
      - windows
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest]
        node-version: [20.x]
    env:
      GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}

    steps:
      - name: Checkout Contetto-desktop
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
          path: "."

      - name: Make Contetto-desktop
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - run: npm install
      - run: npm run make

      - name: CodeSige
        env:
          MAC_CERTIFICATE: ${{ secrets.MAC_CERTIFICATE }}s
          MAC_CERTIFICATE_PWD: ${{ secrets.MAC_CERTIFICATE_PWD }}
          MAC_KEYCHAIN_PASSWORD: ${{ secrets.MAC_KEYCHAIN_PASSWORD }}
          MAC_CERTIFICATE_IDENTITY: ${{ secrets.MAC_CERTIFICATE_IDENTITY }}
        run: |
          echo "$MAC_CERTIFICATE" | base64 --decode > certificate.p12

          # create temporary keychain
          security create-keychain -p "$MAC_KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$MAC_KEYCHAIN_PASSWORD" build.keychain

          security import certificate.p12 -k build.keychain -P "$MAC_CERTIFICATE_PWD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$MAC_KEYCHAIN_PASSWORD" build.keychain
          security find-identity
          
          npm run publish -- --dry-run
